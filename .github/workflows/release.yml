name: Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.0.1'
  workflow_call:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
      
      - name: Setup Git Config
        uses: qoomon/actions--setup-git@v1.1.1
      
      - name: Setup GitHub CLI
        uses: sersoft-gmbh/setup-gh-cli-action@v2.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: 2.62.0
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Tools
        run: |
          pip install commitizen==3.31.0
      
      - name: Create Release
        env:
          RELEASE_VERSION: ${{ inputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_VERSION="${{ env.RELEASE_VERSION }}"
          if [ -z "$RELEASE_VERSION" ]; then
            RELEASE_VERSION=$(git describe --tags --abbrev=0)
          fi

          RELEASE_NOTES=$(cz changelog --incremental --unreleased-version "$RELEASE_VERSION" --dry-run)

          cz changelog --incremental --unreleased-version "$RELEASE_VERSION"

          git add CHANGELOG.md
          git commit -m "chore(release): Update CHANGELOG.md for $RELEASE_VERSION"
          git push origin ${{ github.ref_name }}

          gh release create $RELEASE_VERSION \
            --title "Release $RELEASE_VERSION" \
            --notes "$RELEASE_NOTES" \
            --generate-notes \
            --prerelease
